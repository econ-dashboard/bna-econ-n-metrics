knitr::opts_chunk$set(echo = TRUE)
getwd()
here:here()
here::here()
wd <- here::here()
wd <- here::here()
template_filepath <- "../scripts/templates/template-detail-page.html"
cty_names_filepath <- "../site/county-data/counties_with_data.csv"
read_file(template_filepath)
reader::read_file(template_filepath)
readr::read_file(template_filepath)
template <- readr::read_file(template_filepath)
print(template)
template <- readr::read_file(template_filepath)[1]
print(template)
template <- readr::read_file(template_filepath)
county_names <- read_csv(cty_names_filepath)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
if (!require(whisker)) install.packages("whisker")
library(whisker)
template <- read_file(template_filepath)
county_names <- read_csv(cty_names_filepath)
View(county_names)
county_names <- read_csv(cty_names_filepath) %>% pull(county_names)
read_csv(cty_names_filepath)
county_names <- read_csv(cty_names_filepath) %>% pull(county_name)
str_replace("Alameda County", " ", "-")
str_replace_all("Alameda County", " ", "-") %>% str_to_lower()
str_replace_all("Alameda County Mesa", " ", "-") %>% str_to_lower()
str_replace("Alameda County Mesa", " ", "-") %>% str_to_lower()
str_replace_all("Alameda County", " ", "-") %>% str_to_lower()
template_data <-
list(
county_name=county_name
)
str_replace_all("Alameda County", " ", "-") %>% str_to_lower()
for (county_name in county_names) {
template_data <-
list(
county_name=county_name
)
writeLines(whisker.render(template, template_data), paste0("../site/county-pages/", str_replace_all(county_name, " ", "-") %>% str_to_lower(), "-R.html"))
}
knitr::opts_chunk$set(echo = TRUE)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
fips_codes_url <- "https://www2.census.gov/programs-surveys/popest/geographies/2019/all-geocodes-v2019.xlsx"
readxl::read_xlsx(fips_codes_url, skip = 4)
fips_codes_url <- "https://www2.census.gov/programs-surveys/popest/geographies/2019/all-geocodes-v2019.xlsx"
readxl::read_xlsx(fips_codes_url, skip = 4)
fips_codes_url <- "https://www2.census.gov/programs-surveys/popest/geographies/2019/all-geocodes-v2019.xlsx"
readxl::read_xlsx(fips_codes_url, skip = 4)
fips_codes_filepaths <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
readxl::read_xlsx(fips_codes_url, skip = 4)
fips_codes_filepaths <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
fips_codes_filepath <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
readxl::read_xlsx(fips_codes_filepath, skip = 4)
readxl::read_xlsx(fips_codes_filepath, skip = 4) %>%
filter(
str_detect(`Area Name (including legal/statistical area description)`, "County"))
readxl::read_xlsx(fips_codes_filepath, skip = 4) %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`
)
readxl::read_xlsx(fips_codes_filepath, skip = 4) %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
)
readxl::read_xlsx(fips_codes_filepath, skip = 4) %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings <- readxl::read_xlsx(fips_codes_filepath, skip = 4)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings
raw_fips_mappings %>%
filter(`Summary Level` = "040")
raw_fips_mappings %>%
filter(`Summary Level` == "040")
raw_fips_mappings %>%
filter(`Summary Level` == "040") %>%
select(
state_fips = `State Code (FIPS)`,
state = `Area Name (including legal/statistical area description)`
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
fips_code = str_c(`State Code (FIPS)`, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County"))
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
transmute(
state_fips = `State Code (FIPS)`,
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = state_fips)
state_fips <-
raw_fips_mappings %>%
filter(`Summary Level` == "040") %>%
select(
state_fips = `State Code (FIPS)`,
state = `Area Name (including legal/statistical area description)`
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = state_fips)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = state_fips)
?left_join
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips")
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ",", state),
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
county_formatted = str_to_lower(county) %>% str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", county_formatted, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
area_formatted =
area %>%
str_remove_all(",") %>%
str_to_lower() %>%
str_replace_all(" ", "-"),
county_page_url = paste0("../site/county-pages/", area_formatted, "-", fips_code, ".html")
)
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
area_formatted =
area %>%
str_remove_all(",") %>%
str_to_lower() %>%
str_replace_all(" ", "-"),
county_page_url = paste0("/site/county-pages/", area_formatted, "-", fips_code, ".html")
)
knitr::opts_chunk$set(echo = TRUE)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
fips_codes_filepath <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
county_fips_path_out <- "../../data/processed/reference_data/county_fips_mappings.csv"
raw_fips_mappings <- readxl::read_xlsx(fips_codes_filepath, skip = 4)
state_fips <-
raw_fips_mappings %>%
filter(`Summary Level` == "040") %>%
select(
state_fips = `State Code (FIPS)`,
state = `Area Name (including legal/statistical area description)`
)
county_fips_mappings <-
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
area_formatted =
area %>%
str_remove_all(",") %>%
str_to_lower() %>%
str_replace_all(" ", "-"),
county_page_url = paste0("/site/county-pages/", area_formatted, "-", fips_code, ".html")
)
county_fips_mappings %>%
write_csv(
"../../data/processed/reference_data/county_fips_mappings.csv",
append = F
)
knitr::opts_chunk$set(echo = TRUE)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
cty_fips_path_in <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
cty_fips_path_out <- "../../data/processed/reference_data/county_fips_mappings.csv"
raw_fips_mappings <- readxl::read_xlsx(cty_fips_path_in, skip = 4)
state_fips <-
raw_fips_mappings %>%
filter(`Summary Level` == "040") %>%
select(
state_fips = `State Code (FIPS)`,
state = `Area Name (including legal/statistical area description)`
)
county_fips_mappings <-
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
area_formatted =
area %>%
str_remove_all(",") %>%
str_to_lower() %>%
str_replace_all(" ", "-"),
county_page_url = paste0("/site/county-pages/", area_formatted, "-", fips_code, ".html")
)
cty_fips_path_out %>%
write_csv(
"../../data/processed/reference_data/cty_fips_mappings.csv",
append = F
)
write_csv()
?write_csv
knitr::opts_chunk$set(echo = TRUE)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
cty_fips_path_in <- "../../data/raw/reference_data/all-geocodes-v2019.xlsx"
cty_fips_path_out <- "../../data/processed/reference_data/county_fips_mappings.csv"
raw_fips_mappings <- readxl::read_xlsx(cty_fips_path_in, skip = 4)
state_fips_mappings <-
raw_fips_mappings %>%
filter(`Summary Level` == "040") %>%
select(
state_fips = `State Code (FIPS)`,
state = `Area Name (including legal/statistical area description)`
)
cty_fips_mappings <-
raw_fips_mappings %>%
filter(str_detect(`Area Name (including legal/statistical area description)`, "County")) %>%
rename(state_fips = `State Code (FIPS)`) %>%
left_join(state_fips_mappings, by = "state_fips") %>%
transmute(
fips_code = str_c(state_fips, `County Code (FIPS)`),
county = `Area Name (including legal/statistical area description)`,
state,
area = str_c(county, ", ", state),
area_formatted =
area %>%
str_remove_all(",") %>%
str_to_lower() %>%
str_replace_all(" ", "-"),
county_page_url = paste0("/site/county-pages/", area_formatted, "-", fips_code, ".html")
)
cty_fips_mappings %>% write_csv(cty_fips_path_out)
knitr::opts_chunk$set(echo = TRUE)
template_filepath <- "../scripts/templates/template-detail-page.html"
cty_fips_filepath <- "../data/processed/reference_data/county_fips_mappings.csv"
